{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","user/user-api.js","user/user-details-modal.js","user/user-item.js","user/user-list.js"],"names":["App","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","start","then","setRoot","UserAPI","httpClient","configurehttpRouter","useStandardConfiguration","withBaseUrl","getAllUsers","fetch","resolve","response","json","UserDetails","controller","settings","centerHorizontalOnly","activate","user","UserItem","model","UserList","userApi","dialogService","users","selectedUser","get","data","results","created","showModalDetails","open","viewModel"],"mappings":";;;;;;;;;;;;;MAIaA,cAAAA,MACX,eAAc;AAAA;AAAE;;;;;;;;oBCLH;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX,EAGGC,MAHH,CAGU,gBAHV,EAG6B;;AAE7B,QAAI,sBAAYX,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYI,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYG,MAAZ,CAAmB,iBAAnB;AACD;;AAEDJ,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCMYY,kBAAAA,kBADZ;AAEG,yBAAYC,UAAZ,EAAwB;AAAA;;AACpB,iBAAKA,UAAL,GAAkBA,UAAlB;;AAEA,iBAAKC,mBAAL;AACH;;0BAEDA,qDAAsB;AAClB,iBAAKD,UAAL,CAAgBf,SAAhB,CAA0B,kBAAU;AAChCE,uBACIe,wBADJ,GAEKC,WAFL,CAEiB,4BAFjB;AAGH,aAJD;AAKH;;0BAEDC,qCAAc;AAAA;;AACV,mBAAO,IAAIlB,OAAJ,CAAY,mBAAW;AAC1B,sBAAKc,UAAL,CAAgBK,KAAhB,CAAsB,aAAtB,EACKR,IADL,CACU;AAAA,2BAAYS,QAAQC,SAASC,IAAT,EAAR,CAAZ;AAAA,iBADV;AAEH,aAHM,CAAP;AAIH;;;;;;;;;;;;;;;;;;;;;OCnBQC,sBAAAA,sBAFZ;AAKE,2BAAYC,UAAZ,EAAuB;AAAA;;AACpB,cAAKA,UAAL,GAAkBA,UAAlB;AACAA,oBAAWC,QAAX,CAAoBC,oBAApB,GAA2C,IAA3C;AACF;;4BAEDC,6BAASC,MAAM;AACZ,cAAKA,IAAL,GAAYA,IAAZ;AACF;;;;;;;;;;;;;;;;;;QCfSC,mBAAAA;AACT,4BAAa;AAAA;;AACT,iBAAKD,IAAL,GAAW,IAAX;AACH;;2BAEDD,6BAASG,OAAM;AACX,iBAAKF,IAAL,GAAYE,KAAZ;AACH;;;;;;;;;;;;;;;;;;;;;QCDQC,mBAAAA,mBADZ;AAGG,0BAAYC,OAAZ,EAAqBC,aAArB,EAAoC;AAAA;;AAChC,iBAAKD,OAAL,GAAeA,OAAf;AACA,iBAAKC,aAAL,GAAqBA,aAArB;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKC,YAAL,GAAoB,IAApB;AACH;;2BAEDC,qBAAM;AAAA;;AACF,iBAAKJ,OAAL,CACKd,WADL,GAEKP,IAFL,CAEU,gBAAQ;AACV,sBAAKuB,KAAL,GAAaG,KAAKC,OAAlB;AACH,aAJL;AAKH;;2BAEDC,6BAAU;AACN,iBAAKH,GAAL;AACH;;2BAGDI,6CAAiBZ,MAAM;AACnB,iBAAKK,aAAL,CAAmBQ,IAAnB,CAAwB,EAAEC,wCAAF,EAA0BZ,OAAMF,IAAhC,EAAxB;AACH","file":"app-bundle.js","sourcesContent":["/**\n * @author:Thierno Barry\n * @date: 02/02/2016\n */\nexport class App {\n  constructor() {}\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-dialog'); ;\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","/**\n * @author:Thierno Barry\n * @date: 02/02/2016\n */\nimport { inject } from 'aurelia-dependency-injection';\nimport { HttpClient } from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class UserAPI {\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n        //setup http client router parameters \n        this.configurehttpRouter();\n    }\n\n    configurehttpRouter() {\n        this.httpClient.configure(config => {\n            config.\n                useStandardConfiguration()\n                .withBaseUrl('https://randomuser.me/api/')\n        })\n    }\n    //fetch randomuser api and get 50 users informations\n    getAllUsers() {\n        return new Promise(resolve => {\n            this.httpClient.fetch('?results=50')\n                .then(response => resolve(response.json()));\n        })\n    }\n}","/**\n * @author:Thierno Barry\n * @date: 02/02/2016\n */\nimport {inject} from 'aurelia-framework';\nimport {DialogController} from 'aurelia-dialog';\n\n@inject(DialogController)\n\nexport class UserDetails {\n   \n\n   constructor(controller){\n      this.controller = controller;\n      controller.settings.centerHorizontalOnly = true;\n   }\n   //pass the selected user informations to the modal view \n   activate(user) {\n      this.user = user;\n   }\n}","/**\n * @author:Thierno Barry\n * @date: 02/02/2016\n */\nexport class UserItem{\n    constructor(){\n        this.user =null;\n    }\n\n    activate(model){\n        this.user = model;\n    }\n}","/**\n * @author:Thierno Barry\n * @date: 02/02/2016\n */\nimport { inject } from 'aurelia-dependency-injection';\nimport { UserAPI } from './user-api';\nimport { DialogService } from 'aurelia-dialog';\nimport { UserDetails } from './user-details-modal'\n\n@inject(UserAPI, DialogService)\nexport class UserList {\n\n    constructor(userApi, dialogService) {\n        this.userApi = userApi;\n        this.dialogService = dialogService;\n        this.users = null;\n        this.selectedUser = null;\n    }\n    //retrieve user list from user api service\n    get() {\n        this.userApi\n            .getAllUsers()\n            .then(data => {\n                this.users = data.results;\n            });\n    }\n    //call automatically get method on component rendering\n    created() {\n        this.get();\n    }\n    \n    //invoke modal window view for showing more user informations\n    showModalDetails(user) {\n        this.dialogService.open({ viewModel: UserDetails, model:user });\n    }\n}"],"sourceRoot":"../src"}